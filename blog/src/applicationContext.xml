<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
		default-autowire="byName">

	<context:component-scan base-package="com.blog"></context:component-scan>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/blog"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis.xml"/>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 自动扫描那个包，把包中的接口和mapper文件自动管理，注意，接口名和文件名相同，里面命名空间和id="" 要和方法对应上 -->
		<property name="basePackage" value="com.blog.mapper"></property>
		<!-- 获取到名称，String类型，不要使用ref -->
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
	</bean>
	
	<!-- 创建事务管理类 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 声明式事务 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 声明service.impl.X 下哪些方法被事务管理 -->
			<!-- 设置当前方法和事务之间的关系 REQUIRED：如果当前已经有事务，使用当前事务，如果没有，创建事务。默认值 SUUPORTS: 
				如果当前已经有事务，使用当前事务，如果没有，则不使用事务 MANDATORY：必须有有事务，没有事务报异常 NEVER：必须没有事务，有的话报异常 
				NOT_SUPPORTED：要求执行方法时没有事务，如果有事务，挂起 REQUIRES_NEW：每次执行这个方法都创建新事务，如果已经有事物，创建嵌套子事务 
				read-only:true 当前方法只能读取，没有提交事务 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置AOP，让某些方法与声明式事务进行关联 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.blog.service.impl.*.*(..))"
			id="mypoint" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="mypoint" />
	</aop:config>
</beans>
